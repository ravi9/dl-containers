Bootstrap: docker
From: centos:latest

%setup
export SINGULARITY_SHELL=/bin/bash

%post -c /bin/bash
# If your environment requires proxy to reach internet, then export the http, https proxy variables accordingly

yum clean all
rm -rf /var/cache/yum
yum -y install epel-release
yum -y install wget git

mkdir -p /mnt/shared/
chmod -R 777 /mnt/shared/

cd /tmp
git clone https://github.com/ravi9/azure-hc-intel-tf.git
cd /tmp/azure-hc-intel-tf/install-scripts

# Install dev_tools, OFED, IPoIB, WALinuxAgent, gcc 8.2, UCX1.5, OpenMPI4.0, miniconda, intel-tensorflow, horovod libraries
./setup.sh intelmpi container

cd && rm -rf /tmp/azure-hc-intel-tf

%environment

export PATH=/opt/gcc-8.2.0/bin:$PATH
export LD_LIBRARY_PATH=/opt/gcc-8.2.0/lib64:$LD_LIBRARY_PATH
export CC=/opt/gcc-8.2.0/bin/gcc
export GCC=/opt/gcc-8.2.0/bin/gcc

export PATH=/opt/intel/compilers_and_libraries/linux/mpi/intel64/bin:$PATH
export LD_LIBRARY_PATH=/opt/intel/compilers_and_libraries/linux/mpi/intel64/lib:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=/opt/libfabric/lib:$LD_LIBRARY_PATH

export PATH=/opt/miniconda3/bin:$PATH

%runscript
echo "This is a Singularity image containing Intel optimized TensorFlow installation with Horovod, Intel MPI, Libfabric"
echo "Operating System: $(cat /etc/redhat-release)"
echo "GCC: $(gcc --version)"
echo "TensorFlow: $(pip show tensorflow --disable-pip-version-check | grep "^Version:" | awk '{print $NF}')"
echo "MKL shared libs: $(ldd $(pip show tensorflow | grep Location | cut -d ":" -f2)/tensorflow/libtensorflow_framework.so | grep libmklml)"
echo "IsMklEnabled: "
python -c "import tensorflow as tf; print(tf.pywrap_tensorflow.IsMklEnabled())"
echo "Horovod: $(pip show horovod --disable-pip-version-check | grep "^Version:" | awk '{print $NF}')"
echo "Intel MPI: $(mpirun -version | head -1)"
echo "OFED: $(ofed_info | grep MLNX_OFED)"
echo "Libfabric Version: $(/opt/libfabric-debug/bin/fi_info --version)"
echo "TensorFlow Benchmarks: /opt/tensorflow-benchmarks"
